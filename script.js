document.addEventListener("DOMContentLoaded", () => {
  let currentUser = localStorage.getItem("currentUser");
  if (currentUser) {
    showPostSection(currentUser);
  }
  displayPosts(); // ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤

});

// ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
function login() {
  let username = document.getElementById("usernameInput").value.trim();
  if (username === "") return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ");

  localStorage.setItem("currentUser", username);
  showPostSection(username);
}

function showPostSection(username) {
  document.getElementById("loginSection").style.display = "none";
  document.getElementById("postSection").style.display = "block";
  document.getElementById("currentUser").textContent = username;
  document.getElementById(
    "currentUserLink"
  ).href = `profile.html?user=${username}`;
  displayPosts();
}

// ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
function logout() {
  localStorage.removeItem("currentUser");
  window.location.href = "home.html";
}

// ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏õ‡πÇ‡∏û‡∏™‡∏ï‡πå
// function openPopup() {
//   let popup = document.getElementById("postPopup");
//   popup.style.display = "flex";
//   setTimeout(() => {
//     popup.style.opacity = "1";
//   }, 50);
// }

// function closePopup() {
//   let popup = document.getElementById("postPopup");
//   popup.style.opacity = "0";
//   setTimeout(() => {
//     popup.style.display = "none";
//   }, 300);
// }

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏à‡∏≤‡∏Å‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏õ

// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏•‡∏á localStorage
function savePost(postText, imageURL) {
  let posts = JSON.parse(localStorage.getItem("posts")) || [];
  let newPost = {
    id: Date.now(),
    user: localStorage.getItem("currentUser"),
    text: postText,
    image: imageURL,
    replies: [],
  };

  posts.unshift(newPost); // ‡πÉ‡∏™‡πà‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á Array
  localStorage.setItem("posts", JSON.stringify(posts));

  // ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
  displayPosts();
}

// ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function displayPosts() {

  let currentUser = localStorage.getItem('currentUser')
  let postList = document.getElementById("postList");
  postList.innerHTML = "";

  let posts = JSON.parse(localStorage.getItem("posts")) || [];
  posts.forEach((post) => {
    let li = document.createElement("li");
    li.className = "post";
    li.innerHTML = `
      <p><strong><a href="profile.html?user=${post.user}">${post.user}</a></strong>: ${post.text}</p>
      ${post.image? `<img src="${post.image}" style="max-width: 100%; margin-top: 10px;">`: ""}

      `

      if (post.user === currentUser){
          let Delbtn = document.createElement('div')
          Delbtn.innerHTML = `
          <button onclick="toggleReplyBox(${post.id})"><i class="fa-solid fa-comment"></i></button>
          <button onclick="deletePost(${post.id})" style="color: white;" id='Delbtn'><i class="fa-solid fa-trash"></i></button>`
          li.appendChild(Delbtn)
    }
    else{
      let Delbtn = document.createElement('div')
      Delbtn.innerHTML = `
      <button onclick="toggleReplyBox(${post.id})"><i class="fa-solid fa-comment"></i></button>`
      li.appendChild(Delbtn)
    }

    let lowerpart = document.createElement('div')
    lowerpart.innerHTML = `<!-- üîπ ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö -->
      <div id="replyBox-${post.id}" class="reply-box" style="display: none;">
      <input type="text" id="replyInput-${post.id}" placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö...">
      <button onclick="addReply(${post.id})">‡∏™‡πà‡∏á</button>
      </div>
      
      <!-- üîπ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö -->
      <ul class="reply-section" id="replies-${post.id}">
      ${post.replies.map(reply => `<li><strong>${reply.user}</strong>: ${reply.text}</li>`).join("")}
      </ul>`
      
    li.appendChild(lowerpart)
    


    postList.appendChild(li);

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
    post.replies.forEach((reply) => {
      let replyLi = document.createElement("li");
      replyLi.innerHTML = `<strong>${reply.user}</strong>: ${reply.text}`;
      
    });
  });


}

// ‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
function toggleReplyBox(postId) {
  let replyBox = document.getElementById(`replyBox-${postId}`);
  replyBox.style.display = replyBox.style.display === "none" ? "block" : "none";
}

// ‡∏•‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå
function deletePost(postId) {
  let currentUser = localStorage.getItem("currentUser");
  if (!currentUser) return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");

  let posts = JSON.parse(localStorage.getItem("posts")) || [];
  let postIndex = posts.findIndex((p) => p.id === postId);

  if (postIndex === -1) return;

  let confirmDelete = confirm(
    `‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á "${posts[postIndex].user}" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`
  );
  if (currentUser !== posts[postIndex].user ){
    return alert("‡∏ô‡∏µ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏î‡πÑ‡∏î‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏á!");
  }
  if (confirmDelete) {
    posts.splice(postIndex, 1);
    localStorage.setItem("posts", JSON.stringify(posts));
    displayPosts();
  }
}

// ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
document
  .getElementById("imageInput")
  .addEventListener("change", function (event) {
    let file = event.target.files[0];
    if (file) {
      let reader = new FileReader();
      reader.onload = function (e) {
        let previewImage = document.getElementById("previewImage");
        if (previewImage) {
          previewImage.src = e.target.result;
          previewImage.style.display = "block";
        }
      };
      reader.readAsDataURL(file);
    }
  });
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
function addReply(postId) {
  let replyInput = document.getElementById(`replyInput-${postId}`).value.trim();
  let currentUser = localStorage.getItem("currentUser");
  if (!currentUser) return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");
  if (replyInput === "") return;

  let posts = JSON.parse(localStorage.getItem("posts")) || [];
  let post = posts.find((p) => p.id === postId);
  if (post) {
    post.replies.push({ user: currentUser, text: replyInput });
    localStorage.setItem("posts", JSON.stringify(posts));
    displayPosts();
  }
}
document
  .getElementById("imageInput")
  .addEventListener("change", function (event) {
    let file = event.target.files[0];
    if (file) {
      let reader = new FileReader();
      reader.onload = function (e) {
        let previewImage = document.getElementById("previewImagePopup");
        previewImage.src = e.target.result;
        previewImage.style.display = "block";
        document.getElementById("imagePreviewContainer").style.display =
          "block";
      };
      reader.readAsDataURL(file);
    }
  });
function submitPost() {
  let postInput = document.getElementById("popupPostInput").value.trim();
  let currentUser = localStorage.getItem("currentUser");
  let imageInput = document.getElementById("imageInput").files[0];

  if (!currentUser) return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");
  if (postInput === "" && !imageInput)
    return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û");

  let imageURL = "";
  if (imageInput) {
    let reader = new FileReader();
    reader.onload = function (event) {
      imageURL = event.target.result;
      savePost(postInput, imageURL);
      clearPostInput();
    };
    reader.readAsDataURL(imageInput);
  } else {
    savePost(postInput, imageURL);
    clearPostInput();
  }
}

function clearPostInput() {
  document.getElementById("popupPostInput").value = "";
  document.getElementById("imageInput").value = "";
  document.getElementById("previewImagePopup").style.display = "none";
  document.getElementById("imagePreviewContainer").style.display = "none";
  closePopup();
}

function openPopup() {
  document.getElementById("postPopup").classList.add("show");
}

function closePopup() {
  document.getElementById("postPopup").classList.remove("show");
}

